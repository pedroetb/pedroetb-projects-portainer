version: '3.7'

services:
  agent:
    image: portainer/agent:${AGENT_IMAGE_TAG:-latest}
    environment:
      - LOG_LEVEL
      - AGENT_PORT
      - AGENT_CLUSTER_ADDR=tasks.{{.Service.Name}}
    networks:
      - portainer-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global
      restart_policy:
        delay: 10s
        window: 1m
      resources:
        limits:
          cpus: "${AGENT_LIMITS_CPUS}"
          memory: ${AGENT_LIMITS_MEMORY}
        reservations:
          memory: ${AGENT_RESERVATIONS_MEMORY}

  portainer:
    image: portainer/portainer:${PORTAINER_IMAGE_TAG:-latest}
    command: -H tcp://tasks.${STACK_NAME:-portainer}_agent:${AGENT_PORT} --tlsskipverify
    networks:
      - portainer-net
      - traefik-net
    volumes:
      - portainer-vol:/data
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.docker.network: traefik-net
        traefik.frontend.rule: Host:${SUBDOMAIN}.${PUBLIC_HOSTNAME}
        traefik.backend: portainer
        traefik.port: '9000'
      restart_policy:
        delay: 30s
        window: 2m
      resources:
        limits:
          cpus: "${PORTAINER_LIMITS_CPUS}"
          memory: ${PORTAINER_LIMITS_MEMORY}
        reservations:
          memory: ${PORTAINER_RESERVATIONS_MEMORY}

networks:
  portainer-net:
    name: ${PORTAINER_NET_NAME:-portainer-net}
    driver: overlay
    attachable: ${PORTAINER_NET_ATTACHABLE:-true}

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    external: true

volumes:
  portainer-vol:
    name: ${PORTAINER_VOL_NAME:-portainer-vol}
